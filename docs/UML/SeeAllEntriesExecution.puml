@startuml
skinparam sequenceMessageAlign center
skinparam responseMessageBelowArrow true

actor user
participant "SeeAllEntriesCommand" as cmd
participant "FinancialList" as list
participant "FinancialEntry" as entry


user -> cmd : execute()
cmd -> list : clear Category totals
cmd -> list : getEntryCount()
return financialListEntryCount

loop i < financialListEntryCount
    cmd -> list : getEntry(i)
    return entry

    cmd -> cmd : shouldBeIncluded(entry)

    opt entry should be included
        cmd -> cmd : increment entryCount
        cmd -> entry : toString()
        return entryString
        cmd -> cmd : append to entryList
        cmd -> cmd : add/substract amount from net cashflow
        cmd -> list : update total expense/income in category
    end
end

alt entryCount == 0
    user <-- cmd : print no entry message
else entryCount > 0
    user <-- cmd: print entryList with net cashflow
    cmd -> list : getHighestExpenseCategory()
    list --> cmd: highestExpenseCategory
    cmd -> list : getHighestIncomeCategory()
    list --> cmd: highestIncomeCategory
    user <-- cmd: print Highest Expense/Income category and amount spent/earned
end

deactivate cmd
@enduml